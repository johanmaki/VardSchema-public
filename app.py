{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNy91xwAIqgmEHJyDrLLVbO"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bTVVA0pA_MOe","executionInfo":{"status":"ok","timestamp":1738354287124,"user_tz":-60,"elapsed":10611,"user":{"displayName":"Johan Mäki","userId":"06465433705220433607"}},"outputId":"fb7bf168-20c4-41d2-e80d-fc3b9836b620"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting streamlit\n","  Downloading streamlit-1.41.1-py2.py3-none-any.whl.metadata (8.5 kB)\n","Requirement already satisfied: altair<6,>=4.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (5.5.0)\n","Requirement already satisfied: blinker<2,>=1.0.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (1.9.0)\n","Requirement already satisfied: cachetools<6,>=4.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (5.5.1)\n","Requirement already satisfied: click<9,>=7.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (8.1.8)\n","Requirement already satisfied: numpy<3,>=1.23 in /usr/local/lib/python3.11/dist-packages (from streamlit) (1.26.4)\n","Requirement already satisfied: packaging<25,>=20 in /usr/local/lib/python3.11/dist-packages (from streamlit) (24.2)\n","Requirement already satisfied: pandas<3,>=1.4.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (2.2.2)\n","Requirement already satisfied: pillow<12,>=7.1.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (11.1.0)\n","Requirement already satisfied: protobuf<6,>=3.20 in /usr/local/lib/python3.11/dist-packages (from streamlit) (4.25.6)\n","Requirement already satisfied: pyarrow>=7.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (17.0.0)\n","Requirement already satisfied: requests<3,>=2.27 in /usr/local/lib/python3.11/dist-packages (from streamlit) (2.32.3)\n","Requirement already satisfied: rich<14,>=10.14.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (13.9.4)\n","Requirement already satisfied: tenacity<10,>=8.1.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (9.0.0)\n","Requirement already satisfied: toml<2,>=0.10.1 in /usr/local/lib/python3.11/dist-packages (from streamlit) (0.10.2)\n","Requirement already satisfied: typing-extensions<5,>=4.3.0 in /usr/local/lib/python3.11/dist-packages (from streamlit) (4.12.2)\n","Collecting watchdog<7,>=2.1.5 (from streamlit)\n","  Downloading watchdog-6.0.0-py3-none-manylinux2014_x86_64.whl.metadata (44 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m44.3/44.3 kB\u001b[0m \u001b[31m810.7 kB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: gitpython!=3.1.19,<4,>=3.0.7 in /usr/local/lib/python3.11/dist-packages (from streamlit) (3.1.44)\n","Collecting pydeck<1,>=0.8.0b4 (from streamlit)\n","  Downloading pydeck-0.9.1-py2.py3-none-any.whl.metadata (4.1 kB)\n","Requirement already satisfied: tornado<7,>=6.0.3 in /usr/local/lib/python3.11/dist-packages (from streamlit) (6.4.2)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from altair<6,>=4.0->streamlit) (3.1.5)\n","Requirement already satisfied: jsonschema>=3.0 in /usr/local/lib/python3.11/dist-packages (from altair<6,>=4.0->streamlit) (4.23.0)\n","Requirement already satisfied: narwhals>=1.14.2 in /usr/local/lib/python3.11/dist-packages (from altair<6,>=4.0->streamlit) (1.24.1)\n","Requirement already satisfied: gitdb<5,>=4.0.1 in /usr/local/lib/python3.11/dist-packages (from gitpython!=3.1.19,<4,>=3.0.7->streamlit) (4.0.12)\n","Requirement already satisfied: python-dateutil>=2.8.2 in /usr/local/lib/python3.11/dist-packages (from pandas<3,>=1.4.0->streamlit) (2.8.2)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.11/dist-packages (from pandas<3,>=1.4.0->streamlit) (2024.2)\n","Requirement already satisfied: tzdata>=2022.7 in /usr/local/lib/python3.11/dist-packages (from pandas<3,>=1.4.0->streamlit) (2025.1)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.27->streamlit) (3.4.1)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.27->streamlit) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.27->streamlit) (2.3.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests<3,>=2.27->streamlit) (2024.12.14)\n","Requirement already satisfied: markdown-it-py>=2.2.0 in /usr/local/lib/python3.11/dist-packages (from rich<14,>=10.14.0->streamlit) (3.0.0)\n","Requirement already satisfied: pygments<3.0.0,>=2.13.0 in /usr/local/lib/python3.11/dist-packages (from rich<14,>=10.14.0->streamlit) (2.18.0)\n","Requirement already satisfied: smmap<6,>=3.0.1 in /usr/local/lib/python3.11/dist-packages (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit) (5.0.2)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->altair<6,>=4.0->streamlit) (3.0.2)\n","Requirement already satisfied: attrs>=22.2.0 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (25.1.0)\n","Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (2024.10.1)\n","Requirement already satisfied: referencing>=0.28.4 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.36.2)\n","Requirement already satisfied: rpds-py>=0.7.1 in /usr/local/lib/python3.11/dist-packages (from jsonschema>=3.0->altair<6,>=4.0->streamlit) (0.22.3)\n","Requirement already satisfied: mdurl~=0.1 in /usr/local/lib/python3.11/dist-packages (from markdown-it-py>=2.2.0->rich<14,>=10.14.0->streamlit) (0.1.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.11/dist-packages (from python-dateutil>=2.8.2->pandas<3,>=1.4.0->streamlit) (1.17.0)\n","Downloading streamlit-1.41.1-py2.py3-none-any.whl (9.1 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m9.1/9.1 MB\u001b[0m \u001b[31m26.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading pydeck-0.9.1-py2.py3-none-any.whl (6.9 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m6.9/6.9 MB\u001b[0m \u001b[31m24.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading watchdog-6.0.0-py3-none-manylinux2014_x86_64.whl (79 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m79.1/79.1 kB\u001b[0m \u001b[31m6.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: watchdog, pydeck, streamlit\n","Successfully installed pydeck-0.9.1 streamlit-1.41.1 watchdog-6.0.0\n"]}],"source":["!pip install streamlit"]},{"cell_type":"code","source":["import streamlit as st\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","from collections import defaultdict\n","import random\n","\n","# ======== AI Scheduling Logic ========\n","def generate_fair_schedule(staff, min_daily_score=20, days_in_week=7):\n","    shifts = defaultdict(int)\n","    schedule = {day: {\"staff\": [], \"score\": 0} for day in range(days_in_week)}\n","\n","    for day in schedule:\n","        daily_team = []\n","        daily_score = 0\n","        available_workers = sorted(staff, key=lambda x: (shifts[x[\"name\"]], -x[\"experience\"]))\n","\n","        # AI-like prioritization\n","        for worker in available_workers:\n","            if daily_score >= min_daily_score: break\n","            if (shifts[worker[\"name\"]] <= min(shifts.values())) or (random.random() < 0.3):\n","                daily_team.append(worker[\"name\"])\n","                daily_score += worker[\"experience\"]\n","                shifts[worker[\"name\"]] += 1\n","\n","        # Fallback AI \"reasoning\"\n","        while daily_score < min_daily_score:\n","            for worker in available_workers:\n","                if worker[\"name\"] not in daily_team:\n","                    daily_team.append(worker[\"name\"])\n","                    daily_score += worker[\"experience\"]\n","                    shifts[worker[\"name\"]] += 1\n","                    break\n","\n","        schedule[day][\"staff\"] = daily_team\n","        schedule[day][\"score\"] = daily_score\n","\n","    return schedule, shifts\n","\n","# ======== Streamlit UI ========\n","st.set_page_config(page_title=\"AI Sjukhus Schemaläggare\", layout=\"wide\")\n","\n","# Title and description\n","st.title(\"⚕️ AI-drivet Schemaläggningssystem för Sjukhus\")\n","st.markdown(\"\"\"\n","*Skapat för att automatisera personalplanering med rättvis fördelning och erfarenhetsbalans.*\n","\"\"\")\n","\n","# Sidebar for inputs\n","with st.sidebar:\n","    st.header(\"Inställningar\")\n","    min_score = st.slider(\"Minsta erfarenhetspoäng per dag\", 10, 30, 20)\n","    uploaded_file = st.file_uploader(\"Ladda upp personaldata (Excel/CSV)\", type=[\"csv\", \"xlsx\"])\n","\n","# Load staff data\n","if uploaded_file:\n","    if uploaded_file.name.endswith('.csv'):\n","        staff_df = pd.read_csv(uploaded_file)\n","    else:\n","        staff_df = pd.read_excel(uploaded_file)\n","\n","    staff = staff_df.to_dict('records')\n","\n","    if st.button(\"Generera Schema med AI\"):\n","        with st.spinner(\"AI planerar ditt schema...\"):\n","            schedule, shifts = generate_fair_schedule(staff, min_daily_score=min_score)\n","\n","            # Display schedule\n","            days_se = [\"Måndag\", \"Tisdag\", \"Onsdag\", \"Torsdag\", \"Fredag\", \"Lördag\", \"Söndag\"]\n","            schedule_data = []\n","            for day in schedule:\n","                schedule_data.append({\n","                    \"Dag\": days_se[day],\n","                    \"Personal\": \", \".join(schedule[day][\"staff\"]),\n","                    \"Erfarenhetspoäng\": schedule[day][\"score\"]\n","                })\n","\n","            st.success(\"✅ Schema genererat!\")\n","            st.dataframe(pd.DataFrame(schedule_data), use_container_width=True)\n","\n","            # Show shift distribution\n","            st.subheader(\"Skiftfördelning\")\n","            fig, ax = plt.subplots()\n","            ax.bar(shifts.keys(), shifts.values(), color='#1e88e5')\n","            plt.xticks(rotation=45)\n","            plt.ylabel(\"Antal Skift\")\n","            st.pyplot(fig)\n","\n","            # Download button\n","            csv = pd.DataFrame(schedule_data).to_csv(index=False).encode('utf-8')\n","            st.download_button(\n","                label=\"Ladda ner schema som CSV\",\n","                data=csv,\n","                file_name='ai_genererat_schema.csv',\n","                mime='text/csv'\n","            )\n","else:\n","    st.info(\"ℹ️ Ladda upp en Excel/CSV-fil med personaldata för att börja. [Exempelfil ladda ner](https://docs.google.com/spreadsheets/d/1abc123/edit?usp=sharing)\")\n"],"metadata":{"id":"p54-pbBi_ZRp"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["streamlit run app.py"],"metadata":{"id":"sWwpNiacAfaF"},"execution_count":null,"outputs":[]}]}